name: Release
on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'
      ## Build all our Build Types at once ##
      - name: Build all artifacts
        id: buildAllApks
        uses: gradle/gradle-build-action@v2
        run: |
          echo "${{ secrets.KEYSTORE}}" > release.keystore.asc
          gpg --batch --passphrase "${{ secrets.KEYSTORE_PASSWORD }}" -d -o release.keystore release.keystore.asc
        with:
          arguments: assembleProdRelease --no-daemon
#
#      ## Sign our artifact##
#      - name: Sign artifact
#        id: signArtifact
#        uses: r0adkll/sign-android-release@v1.0.1
#        with:
#          releaseDirectory: app/build/outputs/apk/prod/release
#          alias: ${{ secrets.KEYALIAS }}
#          signingKeyBase64: ${{ secrets.KEYSTORE }}
#          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload our APK
        uses: actions/upload-artifact@v2.2.0
        with:
          name: Release artifact
          path: app/build/outputs/apk/prod/release/app-artifact-*.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Save name of our Artifact
        id: set-result-artifact
        run: |
          ARTIFACT_PATHNAME_APK=$(ls app/build/outputs/apk/ourbuildtype/release/*.apk | head -n 1)
          ARTIFACT_NAME_APK=$(basename $ARTIFACT_PATHNAME_APK)
          echo "ARTIFACT_NAME_APK is " ${ARTIFACT_NAME_APK}
          echo "ARTIFACT_PATHNAME_APK=${ARTIFACT_PATHNAME_APK}" >> $GITHUB_ENV
          echo "ARTIFACT_NAME_APK=${ARTIFACT_NAME_APK}" >> $GITHUB_ENV

      - name: Upload our Artifact Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATHNAME_APK }}
          asset_name: ${{ env.ARTIFACT_NAME_APK }}
          asset_content_type: application/zip