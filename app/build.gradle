/*
 * Copyright (C) 2017 Ace Explorer owned by Siju Sakaria
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion build_versions.target_sdk

    signingConfigs {
        config {
            keyAlias keystoreProp['keyAlias']
            keyPassword keystoreProp['keyPassword']
            storeFile file(keystoreProp['storeFile'])
            storePassword keystoreProp['storePassword']
        }
    }
    defaultConfig {
        applicationId "com.siju.acexplorer"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode versionCodeValue
        versionName versionValue
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'boolean', 'ENABLE_CRASHLYTICS', 'true'
    }

    dexOptions {
        maxProcessCount 2
        javaMaxHeapSize "8g"
    }
    configurations {
        all*.exclude group: 'commons-logging', module: 'commons-logging'
    }
    packagingOptions {
        exclude 'proguard-project.txt'
        exclude 'project.properties'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        return true
    }
    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField 'boolean', 'ENABLE_CRASHLYTICS', 'false'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // Commented since Beta Crashlytics looks for name "app-release.apk" to auto upload build
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Ace_" + defaultConfig.versionName + ".apk"
                }
            }
            signingConfig signingConfigs.config
            return true

        }
    }
    sourceSets {
        main {
            res.srcDirs = [rootProject.resDirs]

        }
    }

    flavorDimensions "dimen"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            buildConfigField 'boolean', 'IS_DEV_VERSION', 'true'
        }
        prod {
            buildConfigField 'boolean', 'IS_DEV_VERSION', 'false'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(include: ['*.aar'], dir: 'libs')
    implementation project(':RootShell')
    implementation project(':billingsecure')

    implementation deps.kotlin.stdlib
    implementation deps.kotlin.coroutine_core
    implementation deps.kotlin.coroutine_android

    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    kapt deps.lifecycle.compiler
    implementation deps.lifecycle.viewmodel_ktx

    implementation deps.room.runtime
    kapt deps.room.compiler

    // Support libraries
    implementation deps.support.app_compat
    implementation deps.support.recycler_view
    implementation deps.support.design
    implementation deps.support.card_view
    implementation deps.support.palette
    implementation deps.support.preference
    kapt deps.support.annotation

    implementation deps.firebase.core
    implementation deps.firebase.ads
    implementation deps.firebase.invites

    implementation deps.billing
    implementation deps.gson

    implementation      deps.glide.runtime
    kapt deps.glide.compiler

    implementation deps.apache_compress
    implementation deps.floating_button
    implementation deps.ratethisapp

    debugImplementation   deps.leak_canary
    releaseImplementation deps.leak_canary_rel

    implementation(deps.crashlytics) {
        transitive = true
    }
    testImplementation deps.testing.junit
    androidTestImplementation(deps.testing.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
apply plugin: 'com.google.gms.google-services'
